<?xml version="1.0" encoding="utf-8" ?>
<CoreDoc>
	<members name="RepeatMode">
		<RepeatMode>
			<summary>
				List of possible repetition modes for task instances.
			</summary>
		</RepeatMode>
		<None>
			<summary>
				The task is not repeated and has a single instance.
			</summary>
		</None>
		<Days>
			<summary>
				The task is repeated every specified number of days.
			</summary>
		</Days>
		<DayOfMonth>
			<summary>
				The task is repeated on the specified date of each month.
			</summary>
		</DayOfMonth>
		<DayOfYear>
			<summary>
				The task is repeated on the specified day of each year.
			</summary>
		</DayOfYear>
		<DaysOfWeek>
			<summary>
				The task is repeated on the specified days of the week.
			</summary>
		</DaysOfWeek>
		<Wathes>
			<summary>
				The task repeats the specified number of days, then skips the specified number of days, etc.
			</summary>
			<example>
				<code>
					Task = new Task { RepeatMode = RepeatMode.Wathes, RepeatValue = "5-2" }; // repeat 5 days, skip 2, repeat 5 days again, skip 2 etc.
					Task = new Task { RepeatMode = RepeatMode.Wathes, RepeatValue = "3-2-2-3" }; // repeat 3 days, skip 2, repeat 2, skip 3, and again.
				</code>
			</example>
		</Wathes>
	</members>
	<members name="IBackupLogic">
		<IBackupLogic>
			<summary>
				Interface declaring methods for working with backups.
			</summary>
		</IBackupLogic>
		<Backups>
			<summary>
				Property that returns a list of created backups.
			</summary>
		</Backups>
		<MakeBackup>
			<summary>
				The method that creates a backup with the specified key.
			</summary>
		</MakeBackup>
		<RestoreBackup>
			<summary>
				A method that restores the storage state from a backup with the specified key.
			</summary>
		</RestoreBackup>
		<DeleteBackup>
			<summary>
				The method that deletes the backup with the specified key.
			</summary>
		</DeleteBackup>
	</members>
	<members name="INetworkLogic">
		<INetworkLogic>
			<summary>
				Interface declaring methods for sending and downloading application data from remote storage.
			</summary>
		</INetworkLogic>
		<ConnectionStringExpr>
			<summary>
				A regular expression used to check the correctness of the connection string.
			</summary>
		</ConnectionStringExpr>
		<ConnectionStringFormat>
			<summary>
				Hint about the format of the connection string.
			</summary>
		</ConnectionStringFormat>
		<Connect>
			<summary>
				Method for connecting to remote storage.
			</summary>
			<param name="getCode">
				Some services require an identification code to connect, in which case this function should be called.
			</param>
		</Connect>
		<IsConnected>
			<summary>
				A method that reports whether a connection has been established and whether it is active now.
			</summary>
		</IsConnected>
		<Load>
			<summary>
				A method that loads data from remote storage to local one.
			</summary>
		</Load>
		<Upload>
			<summary>
				A method that loads data from local storage to remote one.
			</summary>
		</Upload>
	</members>
	<members name="INoteLogic">
		<INoteLogic>
			<summary>
				An interface that declares methods for processing notes in the storage.
			</summary>
		</INoteLogic>
		<Create>
			<summary>
				A method for creating a note in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple notes in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				Method for getting all notes from the storage.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a note in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a note from storage by its id.
			</summary>
		</Delete>
	</members>
	<members name="IPurposeGroupLogic">
		<IPurposeGroupLogic>
			<summary>
				An interface that declares methods for processing purposes groups in the storage.
			</summary>
		</IPurposeGroupLogic>
		<Create>
			<summary>
				A method for creating a purposes group in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple purposes groups in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				Method for getting all purposes group from the storage.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a purposes group in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a purposes group from storage by its id.
			</summary>
		</Delete>
	</members>
	<members name="IPurposeLogic">
		<IPurposeLogic>
			<summary>
				An interface that declares methods for processing purposes in the storage.
			</summary>
		</IPurposeLogic>
		<Create>
			<summary>
				A method for creating a purpose in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple purposes in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				The method of getting a purposes from the storage by the id of the purposes group.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a purpose in the storage.
			</summary>
		</Update>
		<DeleteAll>
			<summary>
				A method for deleting all purposes from storage.
			</summary>
		</DeleteAll>
		<Delete>
			<summary>
				A method for deleting a purpose from storage by its id.
			</summary>
		</Delete>
		<DeleteList>
			<summary>
				A method for deleting a purposes from storage by its ids.
			</summary>
		</DeleteList>
	</members>
	<members name="ITaskInstanceLogic">
		<ITaskInstanceLogic>
			<summary>
				An interface that declares methods for processing tasks instances in the storage.
			</summary>
		</ITaskInstanceLogic>
		<Create>
			<summary>
				A method for creating a task instance in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple task instances in the storage.
			</summary>
		</CreateList>
		<ReadDate>
			<summary>
				The method of getting a tasks instances from the storage by Date.
			</summary>
		</ReadDate>
		<ReadTaskId>
			<summary>
				The method of getting a task instances from the storage by id of the task.
			</summary>
		</ReadTaskId>
		<Update>
			<summary>
				A method for updating a task instance in the storage.
			</summary>
		</Update>
		<UpdateList>
			<summary>
				A method for updating a tasks instances in the storage.
			</summary>
		</UpdateList>
		<DeleteAll>
			<summary>
				A method for deleting all tasks instances from storage.
			</summary>
		</DeleteAll>
		<Delete>
			<summary>
				A method for deleting a task instance from storage by its id.
			</summary>
		</Delete>
		<DeleteList>
			<summary>
				A method for deleting a tasks instances from storage by its ids.
			</summary>
		</DeleteList>
	</members>
	<members name="ITaskLogic">
		<ITaskLogic>
			<summary>
				An interface that declares methods for processing tasks in the storage.
			</summary>
		</ITaskLogic>
		<Create>
			<summary>
				A method for creating a tasks in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple tasks in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				The method of getting a tasks from the storage.
			</summary>
		</Read>
		<ReadOne>
			<summary>
				The method of getting a task from the storage by its id.
			</summary>
		</ReadOne>
		<Update>
			<summary>
				A method for updating a task in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a task from storage by its id.
			</summary>
		</Delete>
	</members>
	<members name="DateTimeHelper">
		<DateTimeHelper>
			<summary>
				A static class with a set of methods that simplify operations with task dates.
			</summary>
		</DateTimeHelper>
		<FillRepeatedTasks>
			<summary>
				A method that creates instances of repeated tasks according to their repeating mode and planning range.
			</summary>
		</FillRepeatedTasks>
		<DeleteOldTasks>
			<summary>
				A method that removes old instances of tasks according to the optimization range.
			</summary>
		</DeleteOldTasks>
		<GetDateForTask>
			<summary>
				A method that returns the most appropriate date for the first instance of the task being created.
			</summary>
		</GetDateForTask>
		<ToDay>
			<summary>
				A method that transfers task instances to a specified date and shift subsequent instances. To transfer an instance, the <c>ToNextDay</c> property of the task must be set as true. To shift subsequent instances, the <c>OffsetAll</c> property of the task must be set as true.
			</summary>
		</ToDay>
		<TaskRare>
			<summary>
				A method that calculates the rarity of the task. Used for sorting.
			</summary>
		</TaskRare>
		<CheckIsValueCorrect>
			<summary>
				A method validating the repeat value according to the repeating mode. Generates an exception in case of failure.
			</summary>
		</CheckIsValueCorrect>
	</members>
	<members name="LocalStorageBackupLogic">
		<LocalStorageBackupLogic>
			<summary>
				<c>IBackupLogic</c> implementation for local storage.
			</summary>
		</LocalStorageBackupLogic>
	</members>
	<members name="BackupsLanguage">
		<BackupsLanguage>
			<summary>
				A model with language data associated with backup.
			</summary>
		</BackupsLanguage>
	</members>
	<members name="ControlCommandsLanguage">
		<ControlCommandsLanguage>
			<summary>
				A model with language data associated with control commands.
			</summary>
		</ControlCommandsLanguage>
	</members>
	<members name="DaysOfWeekLanguage">
		<DaysOfWeekLanguage>
			<summary>
				A model with language data associated with the days of the week.
			</summary>
		</DaysOfWeekLanguage>
	</members>
	<members name="ErrorsMessagesLanguage">
		<ErrorsMessagesLanguage>
			<summary>
				A model with language data associated with the errors messages.
			</summary>
		</ErrorsMessagesLanguage>
	</members>
	<members name="Language">
		<Language>
			<summary>
				A model containing all the language data. For convenience, the language data is distributed across submodels.
			</summary>
		</Language>
	</members>
	<members name="NotesLanguage">
		<NotesLanguage>
			<summary>
				A model with language data associated with the notes.
			</summary>
		</NotesLanguage>
	</members>
	<members name="PlanningAndOptimizationLanguage">
		<PlanningAndOptimizationLanguage>
			<summary>
				A model with language data associated with the planning and optimization.
			</summary>
		</PlanningAndOptimizationLanguage>
	</members>
	<members name="PurposesLanguage">
		<PurposesLanguage>
			<summary>
				A model with language data associated with the purposes.
			</summary>
		</PurposesLanguage>
	</members>
	<members name="SettingsLanguage">
		<SettingsLanguage>
			<summary>
				A model with language data associated with the settings.
			</summary>
		</SettingsLanguage>
	</members>
	<members name="SyncronizationLanguage">
		<SyncronizationLanguage>
			<summary>
				A model with language data associated with the syncronization.
			</summary>
		</SyncronizationLanguage>
	</members>
	<members name="TasksLanguage">
		<TasksLanguage>
			<summary>
				A model with language data associated with the tasks.
			</summary>
		</TasksLanguage>
	</members>
	<members name="AppSettings">
		<AppSettings>
			<summary>
				The model of the application settings.
			</summary>
		</AppSettings>
		<ConnectionStringStorage>
			<summary>
				The connection string to the remote entity store.
			</summary>
		</ConnectionStringStorage>
		<ConnectionStringLanguage>
			<summary>
				The connection string to the remote language settings storage.
			</summary>
		</ConnectionStringLanguage>
		<PlanningRanges>
			<summary>
				A set of default range settings for each of the repeat modes.
			</summary>
		</PlanningRanges>
		<OptimizationRange>
			<summary>
				Default settings for optimization range.
			</summary>
		</OptimizationRange>
		<ColorSchema>
			<summary>
				Color scheme settings.
			</summary>
		</ColorSchema>
		<BackupSettings>
			<summary>
				Backup settings.
			</summary>
		</BackupSettings>
		<Language>
			<summary>
				The selected language.
			</summary>
		</Language>
	</members>
	<members name="BackupSettings">
		<BackupSettings>
			<summary>
				The model of settings for backup.
			</summary>
		</BackupSettings>
		<AutoCloudBackup>
			<summary>
				Should create a backup in the cloud storage before uploading data?
			</summary>
		</AutoCloudBackup>
		<AutoLocalBackup>
			<summary>
				Should create a backup in the local storage before downloading data?
			</summary>
		</AutoLocalBackup>
	</members>
	<members name="ColorSchema">
		<ColorSchema>
			<summary>
				Model of color scheme settings.
			</summary>
		</ColorSchema>
		<Colors>
			<summary>
				Dictionary of colors. The color name is used as the key, and the RGB color code in hex is used as the value.
			</summary>
		</Colors>
		<ColorSchemaAbsent>
			<summary>
				A method that returns the missing names in the list of colors.
			</summary>
		</ColorSchemaAbsent>
	</members>
	<members name="CommentedElemet">
		<CommentedElemet>
			<summary>
				An abstract model of an entity to which you can write a comment.
			</summary>
		</CommentedElemet>
		<Comment>
			<summary>
				Comment to the entity.
			</summary>
		</Comment>
	</members>
	<members name="Note">
		<Note>
			<summary>
				Model of the note.
			</summary>
		</Note>
		<Id>
			<summary>
				Model ID.
			</summary>
		</Id>
		<Name>
			<summary>
				The name of the note.
			</summary>
		</Name>
		<Text>
			<summary>
				The text of the note.
			</summary>
		</Text>
	</members>
</CoreDoc>