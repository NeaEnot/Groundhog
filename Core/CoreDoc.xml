<?xml version="1.0" encoding="utf-8" ?>
<CoreDoc>
	<members name="RepeatMode">
		<RepeatMode>
			<summary>
				List of possible repetition modes for task instances.
			</summary>
		</RepeatMode>
		<None>
			<summary>
				The task is not repeated and has a single instance.
			</summary>
		</None>
		<Days>
			<summary>
				The task is repeated every specified number of days.
			</summary>
		</Days>
		<DayOfMonth>
			<summary>
				The task is repeated on the specified date of each month.
			</summary>
		</DayOfMonth>
		<DayOfYear>
			<summary>
				The task is repeated on the specified day of each year.
			</summary>
		</DayOfYear>
		<DaysOfWeek>
			<summary>
				The task is repeated on the specified days of the week.
			</summary>
		</DaysOfWeek>
		<Wathes>
			<summary>
				The task repeats the specified number of days, then skips the specified number of days, etc.
			</summary>
			<example>
				<code>
					Task = new Task { RepeatMode = RepeatMode.Wathes, RepeatValue = "5-2" }; // repeat 5 days, skip 2, repeat 5 days again, skip 2 etc.
					Task = new Task { RepeatMode = RepeatMode.Wathes, RepeatValue = "3-2-2-3" }; // repeat 3 days, skip 2, repeat 2, skip 3, and again.
				</code>
			</example>
		</Wathes>
	</members>
	<members name="IBackupLogic">
		<IBackupLogic>
			<summary>
				Interface declaring methods for working with backups.
			</summary>
		</IBackupLogic>
		<Backups>
			<summary>
				Property that returns a list of created backups.
			</summary>
		</Backups>
		<MakeBackup>
			<summary>
				The method that creates a backup with the specified key.
			</summary>
		</MakeBackup>
		<RestoreBackup>
			<summary>
				A method that restores the storage state from a backup with the specified key.
			</summary>
		</RestoreBackup>
		<DeleteBackup>
			<summary>
				The method that deletes the backup with the specified key.
			</summary>
		</DeleteBackup>
	</members>
	<members name="INetworkLogic">
		<INetworkLogic>
			<summary>
				Interface declaring methods for sending and downloading application data from remote storage.
			</summary>
		</INetworkLogic>
		<ConnectionStringExpr>
			<summary>
				A regular expression used to check the correctness of the connection string.
			</summary>
		</ConnectionStringExpr>
		<ConnectionStringFormat>
			<summary>
				Hint about the format of the connection string.
			</summary>
		</ConnectionStringFormat>
		<Connect>
			<summary>
				Method for connecting to remote storage.
			</summary>
			<param name="getCode">
				Some services require an identification code to connect, in which case this function should be called.
			</param>
		</Connect>
		<IsConnected>
			<summary>
				A method that reports whether a connection has been established and whether it is active now.
			</summary>
		</IsConnected>
		<Load>
			<summary>
				A method that loads data from remote storage to local one.
			</summary>
		</Load>
		<Upload>
			<summary>
				A method that loads data from local storage to remote one.
			</summary>
		</Upload>
	</members>
	<members name="INoteLogic">
		<INoteLogic>
			<summary>
				An interface that declares methods for processing notes in the storage.
			</summary>
		</INoteLogic>
		<Create>
			<summary>
				A method for creating a note in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple notes in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				Method for getting all notes from the storage.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a note in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a note from storage by its id.
			</summary>
		</Delete>
	</members>
	<members name="IPurposeGroupLogic">
		<IPurposeGroupLogic>
			<summary>
				An interface that declares methods for processing purposes groups in the storage.
			</summary>
		</IPurposeGroupLogic>
		<Create>
			<summary>
				A method for creating a purposes group in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple purposes groups in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				Method for getting all purposes group from the storage.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a purposes group in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a purposes group from storage by its id.
			</summary>
		</Delete>
	</members>
	<members name="IPurposeLogic">
		<IPurposeLogic>
			<summary>
				An interface that declares methods for processing purposes in the storage.
			</summary>
		</IPurposeLogic>
		<Create>
			<summary>
				A method for creating a purpose in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple purposes in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				The method of getting a purposes from the storage by the id of the purposes group.
			</summary>
		</Read>
		<Update>
			<summary>
				A method for updating a purpose in the storage.
			</summary>
		</Update>
		<DeleteAll>
			<summary>
				A method for deleting all purposes from storage.
			</summary>
		</DeleteAll>
		<Delete>
			<summary>
				A method for deleting a purpose from storage by its id.
			</summary>
		</Delete>
		<DeleteList>
			<summary>
				A method for deleting a purposes from storage by its ids.
			</summary>
		</DeleteList>
	</members>
	<members name="ITaskInstanceLogic">
		<ITaskInstanceLogic>
			<summary>
				An interface that declares methods for processing tasks instances in the storage.
			</summary>
		</ITaskInstanceLogic>
		<Create>
			<summary>
				A method for creating a task instance in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple task instances in the storage.
			</summary>
		</CreateList>
		<ReadDate>
			<summary>
				The method of getting a tasks instances from the storage by Date.
			</summary>
		</ReadDate>
		<ReadTaskId>
			<summary>
				The method of getting a task instances from the storage by id of the task.
			</summary>
		</ReadTaskId>
		<Update>
			<summary>
				A method for updating a task instance in the storage.
			</summary>
		</Update>
		<UpdateList>
			<summary>
				A method for updating a tasks instances in the storage.
			</summary>
		</UpdateList>
		<DeleteAll>
			<summary>
				A method for deleting all tasks instances from storage.
			</summary>
		</DeleteAll>
		<Delete>
			<summary>
				A method for deleting a task instance from storage by its id.
			</summary>
		</Delete>
		<DeleteList>
			<summary>
				A method for deleting a tasks instances from storage by its ids.
			</summary>
		</DeleteList>
	</members>
	<members name="ITaskLogic">
		<ITaskLogic>
			<summary>
				An interface that declares methods for processing tasks in the storage.
			</summary>
		</ITaskLogic>
		<Create>
			<summary>
				A method for creating a tasks in the storage.
			</summary>
		</Create>
		<CreateList>
			<summary>
				A method for creating multiple tasks in the storage.
			</summary>
		</CreateList>
		<Read>
			<summary>
				The method of getting a tasks from the storage.
			</summary>
		</Read>
		<ReadOne>
			<summary>
				The method of getting a task from the storage by its id.
			</summary>
		</ReadOne>
		<Update>
			<summary>
				A method for updating a task in the storage.
			</summary>
		</Update>
		<Delete>
			<summary>
				A method for deleting a task from storage by its id.
			</summary>
		</Delete>
	</members>
</CoreDoc>